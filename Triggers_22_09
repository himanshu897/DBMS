/*
CREATE TABLE lib_tab(book_name VARCHAR2(25),status VARCHAR2(15));
CREATE TABLE library_audit(date_modified DATE, book_name VARCHAR2(25),old_status VARCHAR(15),new_status VARCHAR2(15),action VARCHAR2(25));


INSERT INTO lib_tab VALUES('DARK MATTER','AVAILABLE');
INSERT INTO lib_tab VALUES('SILENT HILL','UNAVAILABLE');
INSERT INTO lib_tab VALUES('GOD OF WAR','AVAILABLE');
INSERT INTO lib_tab VALUES('SPIDER-MAN','UNAVAILABLE');
INSERT INTO lib_tab VALUES('UNCHARTED','AVAILABLE');
*/

CREATE OR REPLACE TRIGGER trigger_1 
AFTER UPDATE OR DELETE ON lib_tab FOR EACH ROW
ENABLE
	DECLARE
		aud_bookname lib_tab.book_name%TYPE;
	BEGIN
		IF UPDATING THEN
			aud_bookname := :OLD.book_name;
			dbms_output.put_line(:OLD.status);
			INSERT INTO library_audit VALUES (SYSDATE,aud_bookname,:OLD.status,:NEW.status,'UPDATE');
		ELSE
			dbms_output.put_line(:OLD.book_name||'deleting');
			INSERT INTO library_audit VALUES(SYSDATE,:OLD.book_name,:OLD.status,NULL,'DELETE');
		END IF;
	END;
/


OUTPUT:-

CREATE TABLE lib_tab(book_name VARCHAR2(25),status VARCHAR2(15));
CREATE TABLE library_audit(date_modified DATE, book_name VARCHAR2(25),old_status VARCHAR(15),new_status VARCHAR2(15),action VARCHAR2(25));


INSERT INTO lib_tab VALUES('DARK MATTER','AVAILABLE');
INSERT INTO lib_tab VALUES('SILENT HILL','UNAVAILABLE');
INSERT INTO lib_tab VALUES('GOD OF WAR','AVAILABLE');
INSERT INTO lib_tab VALUES('SPIDER-MAN','UNAVAILABLE');

Table created.

SQL> 
Table created.

SQL> SQL> SQL> 
1 row created.

SQL> 
1 row created.

SQL> 
1 row created.

SQL> 
1 row created.

select * from lib_tab;

BOOK_NAME		  STATUS
------------------------- ---------------
DARK MATTER		  AVAILABLE
SILENT HILL		  UNAVAILABLE
GOD OF WAR		  AVAILABLE
SPIDER-MAN		  UNAVAILABLE

CREATE OR REPLACE TRIGGER trigger_1 
AFTER UPDATE OR DELETE ON lib_tab FOR EACH ROW
  3  ENABLE
DECLARE
aud_bookname lib_tab.book_name%TYPE;
BEGIN
IF UPDATING THEN
aud_bookname := :OLD.book_name;
dbms_output.put_line(:OLD.status);
INSERT INTO library_audit VALUES (SYSDATE,aud_bookname,:OLD.status,:NEW.status,'UPDATE');
ELSE
dbms_output.put_line(:OLD.book_name||'deleting');
INSERT INTO library_audit VALUES(SYSDATE,:OLD.book_name,:OLD.status,NULL,'DELETE');
END IF;
END;
/

Trigger created.

INSERT INTO lib_tab VALUES('DBMS','ORDERED');

1 row created.

select * from lib_audit;
select * from lib_audit
              *
ERROR at line 1:
ORA-00942: table or view does not exist


select * from library_audit;

no rows selected

update lib_tab set status='Available' where book_name ='DBMS';

1 row updated.

select * from library_audit;

DATE_MOD BOOK_NAME		   OLD_STATUS	   NEW_STATUS
-------- ------------------------- --------------- ---------------
ACTION
-------------------------
29-09-22 DBMS			   ORDERED	   Available
UPDATE


delete from lib_tab where book_name = 'DBMS';

1 row deleted.

select * from library_audit;

DATE_MOD BOOK_NAME		   OLD_STATUS	   NEW_STATUS
-------- ------------------------- --------------- ---------------
ACTION
-------------------------
29-09-22 DBMS			   ORDERED	   Available
UPDATE

29-09-22 DBMS			   Available
DELETE



